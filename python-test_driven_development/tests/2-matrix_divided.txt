>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>>matrix = [
[1, 2, 3],
 [4, 5, 6]
]

# Test for division of each element in a matrix by a positive integer
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

# Test for division of each element in a matrix by a positive float
>>> matrix_divided(matrix, 2.5)
[[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

# Test for division by zero, expecting a ZeroDivisionError
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

# Test for division by a negative number, expecting a ValueError
>>> matrix_divided(matrix, -1)
Traceback (most recent call last):
ValueError: div must be greater than 0

# Test for division by non-number types, expecting TypeError for each
>>> matrix_divided(matrix, "Hello")
>>> matrix_divided(matrix, [1, 2, 3])
>>> matrix_divided(matrix, (1, 2, 3))
>>> matrix_divided(matrix, {"key": "value"})
>>> matrix_divided(matrix, True)
>>> matrix_divided(matrix, None)
Traceback (most recent call last):
TypeError: div must be a number

# Test for a matrix with non-numeric elements, expecting TypeError
>>> matrix_divided([["a", "b", "c"], ["d", "e", "f"]], 5)
Traceback (most recent call last):
TypeError: unsupported operand type(s) for /: 'str' and 'int'

# Test for missing arguments, expecting TypeError
>>> matrix_divided(matrix,)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

# Additional Tests

# Test for division of each element in a matrix by an extremely large number
>>> matrix_divided(matrix, 1e9)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

# Test for division of each element in a matrix by a very small positive number
>>> matrix_divided(matrix, 0.0001)
[[10000.0, 20000.0, 30000.0], [40000.0, 50000.0, 60000.0]]

# Test for division of a matrix with floating-point numbers
>>> matrix = [
...     [1.5, 2.5, 3.5],
...     [4.5, 5.5, 6.5]
... ]
>>> matrix_divided(matrix, 2)
[[0.75, 1.25, 1.75], [2.25, 2.75, 3.25]]

# Test for an empty matrix, expecting an appropriate error or handling
>>> matrix_divided([], 2)
Traceback (most recent call last):
TypeError: matrix must be a non-empty matrix
