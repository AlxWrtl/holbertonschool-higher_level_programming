>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>>matrix = [
...             [1, 2, 3],
...             [4, 5, 6]
...         ]

>>>matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

>>>matrix_divided(matrix, 2.5)
[[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

>>> matrix_divided(matrix, 3)[[-1.0, -2.67], [-4.0, -3.67]]
Traceback (most recent call last):
TypeError: list indices must be integers or slices, not tuple

>>>matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided(matrix, "Hello")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix, [1, 2, 3])
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix, (1, 2, 3))
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix, {"key": "value"})
Traceback (most recent call last):
TypeError: div must be a number

matrix_divided(matrix, True)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix, None)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix,)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

matrix_divided(matrix, -1)
Traceback (most recent call last):
ValueError: div must be greater than 0

matrix_divided(matrix, -1.5)
Traceback (most recent call last):
ValueError: div must be greater than 0
